{
  "version": 3,
  "sources": ["../js/App.jsx", "../js/About.jsx", "../js/Animation.js", "../js/ControlPanel.js", "../js/lib/three-custom/raycaster.js", "../js/Scene.js", "../js/Celestiary.js", "../js/TimePanel.jsx"],
  "sourcesContent": ["import React from 'react'\nimport AboutButton from './About'\nimport Celestiary from './Celestiary'\nimport HelpButton from './Help'\nimport TimePanel from './TimePanel'\nimport * as collapsor from './collapsor'\nimport { elt } from './utils'\nimport './index.css'\n\n\nexport default function App() {\n  const [celestiary, setCelestiary] = React.useState(null);\n  const [timeStr, setTimeStr] = React.useState('bar');\n  const [showAbout, setShowAbout] = React.useState(false);\n  React.useEffect(() => {\n    setCelestiary(new Celestiary(elt('scene-id'), elt('nav-id'), setTimeStr));\n  }, []);\n  return (\n    <>\n      <div id=\"scene-id\"/>\n      <div id=\"nav-id\" className=\"panel\">Welcome to Celestiary!  Loading...</div>\n      <div id=\"top-right\" className=\"panel\">\n        {celestiary && <TimePanel time={celestiary.time} timeStr={timeStr}/>}\n        {celestiary && <HelpButton keys={celestiary.keys} />}\n        <AboutButton/>\n      </div>\n      <h1 id=\"target-id\"></h1>\n    </>);\n};\n", "import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nexport default function AboutButton() {\n  const [open, setOpen] = React.useState(false);\n  const toggleOpen = () => { setOpen(!open) };\n  return (\n    <>\n      <button onClick={toggleOpen} className=\"textButton\">About</button>\n      {open && <About openToggle={toggleOpen}/>}\n    </>)\n}\n\n\nfunction About({openToggle}) {\n  return (\n<div className=\"dialog\">\n  <button onClick={openToggle}>X</button>\n  <h1>About</h1>\n  Celestiary is a cosmological simulator.\n\n  <h2>News</h2>\n  <ul>\n    <li>2021 Jan 25 - Works in Safari 13.1.2+ on OSX, maybe earlier.\n    Now all major browsers tested except IE.</li>\n  </ul>\n\n  <h2>Features</h2>\n  <ul>\n    <li>Keplerian orbits (6 orbital elements)</li>\n    <li>Time controls, to alter rate and direction of time</li>\n    <li>Star colors based on surface temperatures</li>\n    <li>Star surface dynamics simulation (Perlin noise in black-body spectra)</li>\n    <li>9 planets, 20 moons</li>\n    <li>Permanent links for scene locations</li>\n    <li>Even kinda works on mobile! :)</li>\n  </ul>\n  <h2>Datasets</h2>\n  <ul>\n    <li>~100,000 stars</li>\n    <li>~3k star names</li>\n    <li>~80 Asterisms/constellations</li>\n  </ul>\n  <h2>Learn more</h2>\n  <ul>\n    <li><Link to=\"/guide\">Software development guide</Link></li>\n    <li><a href=\"https://github.com/pablo-mayrgundter/celestiary\" target=\"_blank\">Source code (GitHub)</a></li>\n  </ul>\n</div>);\n}\n", "import {Vector3} from 'three';\nimport * as Shared from './shared.js';\n\n\n// TODO: move this to scene.\nexport default class Animation {\n  constructor(time) {\n    this.time = time;\n    this.Y_AXIS = new Vector3(0, 1, 0);\n  }\n\n\n  animate(scene) {\n    this.time.updateTime();\n    this.animateSystem(scene, this.time.simTime / 1000);\n  }\n\n\n  /**\n   * Recursive animation of orbits and rotations at the current time.\n   * @param {!Object3D} system\n   */\n  animateSystem(system, simTimeSecs) {\n    if (system.preAnimCb) {\n      system.preAnimCb(this.time);\n    }\n    if (system.siderealRotationPeriod) {\n      // TODO(pablo): this is hand-calibrated for Earth and so is\n      // incorrect for the other planets.  Earth Orientation Parameters\n      // are here:\n      //\n      //   http://hpiers.obspm.fr/eop-pc/index.php?index=orientation\n      //\n      // and also would also need them for the other planets.\n      const angle = 1.5 * Math.PI + simTimeSecs / 86400 * Shared.twoPi;\n      system.setRotationFromAxisAngle(this.Y_AXIS, angle);\n    }\n\n    // This is referred to by a comment in scene.js#addOrbitingPlanet.\n    if (system.orbit) {\n      const eccentricity = system.orbit.eccentricity;\n      const aRadius = system.orbit.semiMajorAxis.scalar * Shared.LENGTH_SCALE;\n      const bRadius = aRadius * Math.sqrt(1.0 - Math.pow(eccentricity, 2.0));\n      // -1.0 because orbits are counter-clockwise when viewed from above North of Earth.\n      const angle = -1.0 * simTimeSecs / system.orbit.siderealOrbitPeriod.scalar * Shared.twoPi;\n      const x = aRadius * Math.cos(angle);\n      const y = 0;\n      const z = bRadius * Math.sin(angle);\n      //console.log(`${eccentricity} ${aRadius} ${bRadius} ${simTimeSecs} ${system.orbit.siderealOrbitPeriod}`);\n      system.position.set(x, y, z);\n      if (system.postAnimCb) {\n        system.postAnimCb(system);\n      }\n    }\n\n    for (const ndx in system.children) {\n      const child = system.children[ndx];\n      this.animateSystem(child, simTimeSecs);\n    }\n  }\n}\n", "import Measure from '@pablo-mayrgundter/measure.js';\nimport * as collapsor from './collapsor.js';\nimport {capitalize} from './utils.js';\n\n\nexport default class ControlPanel {\n  constructor(containerElt, loader) {\n    this.containerElt = containerElt;\n    this.loader = loader;\n  }\n\n  getPathTarget(path) {\n    return path[path.length - 1];\n  }\n\n  showNavDisplay(path) {\n    let crumbs = '';\n    for (let i = 0; i < path.length; i++) {\n      const hash = path.slice(0, i + 1).join('/');\n      const name = path[i];\n      if (i == path.length - 1) {\n        crumbs += capitalize(name);\n      } else {\n        crumbs += '<a href=\"#'+ hash +'\">' + capitalize(name) + '</a>';\n      }\n      if (i < path.length - 1) {\n        crumbs += ' &gt; ';\n      }\n    }\n\n    let html = crumbs + ' <ul>\\n';\n    const pathPrefix = path.join('/');\n    html += this.showInfoRecursive(this.loader.loaded[this.getPathTarget(path)],\n                                   pathPrefix, false, false);\n    html += '</ul>\\n';\n    this.containerElt.innerHTML = html;\n    collapsor.makeCollapsable(this.containerElt);\n  }\n\n\n  showInfoRecursive(obj, pathPrefix, isArray, isSystem) {\n    let html = '';\n    for (let prop in obj) {\n      if (prop == 'name' || prop == 'parent' || prop.startsWith('texture_')) {\n        continue;\n      }\n      if (obj.hasOwnProperty(prop)) {\n        let val = obj[prop];\n        if (prop == 'system' && typeof val == 'object' && Array.isArray(val) && val.length == 0) {\n          continue;\n        }\n        html += '<li>';\n        if (!isArray) {\n          html += prop + ': ';\n        }\n        if (val instanceof Measure) {\n          switch (prop) {\n          case 'radius': val = val.convertTo(Measure.Magnitude.KILO); break;\n          case 'mass': val = val.convertTo(Measure.Magnitude.KILO); break;\n          case 'semiMajorAxis':\n            // TODO\n            if (typeof val.scalar == 'string')\n              val.scalar = parseFloat(val.scalar);\n            val.scalar = val.scalar.toExponential(4);\n            val = val.toString();\n            break;\n          case 'siderealOrbitPeriod':\n            val = secsToYDHMS(val.scalar);\n            break;\n          case 'siderealRotationPeriod':\n            val = secsToYDHMS(val.scalar);\n            break;\n          }\n          html += val;\n        } else if (val instanceof Array) {\n          if (prop == 'system') {\n            html += '<ol>\\n';\n          } else {\n            html += '<ol class=\"collapsed\">\\n';\n          }\n          html += this.showInfoRecursive(val, pathPrefix, true, prop == 'system');\n          html += '</ol>\\n';\n        } else if (val instanceof Object) {\n          html += '<ul class=\"collapsed\">\\n';\n          html += this.showInfoRecursive(val, pathPrefix, false, false);\n          html += '</ul>\\n';\n        } else {\n          if (isSystem) {\n            let path = pathPrefix;\n            if (pathPrefix.length > 0) {\n              path += '/';\n            }\n            path += val;\n            html += '<a href=\"#' + path + '\">';\n            html += capitalize(val);\n          } else {\n            html += val;\n          }\n          if (isSystem) {\n            html += '</a>';\n          }\n        }\n        html += '</li>\\n';\n      }\n    }\n    return html;\n  }\n}\n\n\nfunction secsToYDHMS(s) {\n  const secsPerYear = 86400 * 365;\n  let str = '';\n  const years = parseInt(s / secsPerYear);\n  if (years > 0) {\n    s -= years * secsPerYear;\n    str += `${years}y`;\n  }\n  const days = parseInt(s / 86400);\n  if (days > 0) {\n    s -= days * 86400;\n    str += ` ${days}d`;\n  }\n  const hours = parseInt(s / 3600);\n  if (hours > 0) {\n    s -= hours * 3600;\n    str += ` ${hours}h`;\n  }\n  const minutes = parseInt(s / 60);\n  if (minutes > 0) {\n    s -= minutes * 60;\n    str += ` ${minutes}m`;\n  }\n  const seconds = parseInt(s);\n  if (seconds > 0) {\n    str += ` ${seconds}s`;\n  }\n  return str;\n}\n", "// From https://github.com/mrdoob/three.js/blob/34dc2478c684066257e4e39351731a93c6107ef5/src/core/Raycaster.js\nimport { Ray } from 'three';\n\n/**\n * Custom version of Raycaster for Celestiary that uses distanceToRay\n * instead of distance to screen for closest sort.\n *\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n * @author pablo\n */\nexport default function CustomRaycaster( origin, direction, near, far ) {\n\n  this.ray = new Ray( origin, direction );\n  // direction is assumed to be normalized (for accurate distance calculations)\n\n  this.near = near || 0;\n  this.far = far || Infinity;\n\n  this.params = {\n    Mesh: {},\n    Line: {},\n    LOD: {},\n    Points: { threshold: 1 },\n    Sprite: {}\n  };\n\n  Object.defineProperties( this.params, {\n      PointCloud: {\n        get: function () {\n          console.warn( 'CustomRaycaster: params.PointCloud has been renamed to params.Points.' );\n          return this.Points;\n        }\n      }\n    } );\n}\n\nfunction ascSort( a, b ) {\n  return a.distanceToRay - b.distanceToRay;\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n  if ( object.visible === false ) return;\n  object.raycast( raycaster, intersects );\n  if ( recursive === true ) {\n    var children = object.children;\n    for ( var i = 0, l = children.length; i < l; i ++ ) {\n      intersectObject( children[ i ], raycaster, intersects, true );\n    }\n  }\n}\n\nObject.assign( CustomRaycaster.prototype, {\n\n    linePrecision: 1,\n\n    set: function ( origin, direction ) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set( origin, direction );\n    },\n\n    setFromCamera: function ( coords, camera ) {\n      if ( ( camera && camera.isPerspectiveCamera ) ) {\n        this.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n        this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n      } else if ( ( camera && camera.isOrthographicCamera ) ) {\n        this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n        this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n      } else {\n        console.error( 'CustomRaycaster: Unsupported camera type.' );\n      }\n    },\n\n    intersectObject: function ( object, recursive, optionalTarget ) {\n      var intersects = optionalTarget || [];\n      intersectObject( object, this, intersects, recursive );\n      intersects.sort( ascSort );\n      return intersects;\n\n    },\n\n    intersectObjects: function ( objects, recursive, optionalTarget ) {\n      var intersects = optionalTarget || [];\n      if ( Array.isArray( objects ) === false ) {\n        console.warn( 'CustomRaycaster.intersectObjects: objects is not an Array.' );\n        return intersects;\n      }\n      for ( var i = 0, l = objects.length; i < l; i ++ ) {\n        intersectObject( objects[ i ], this, intersects, recursive );\n      }\n      intersects.sort( ascSort );\n      return intersects;\n    }\n  } );\n", "import {\n  Object3D,\n  Raycaster,\n  Vector2,\n  Vector3\n} from 'three';\nimport CustomRaycaster from './lib/three-custom/raycaster.js';\n\nimport Asterisms from './Asterisms.js';\nimport Object from './object.js';\nimport Planet from './Planet.js';\nimport SpriteSheet from './SpriteSheet.js';\nimport Star from './Star.js';\nimport Stars from './Stars.js';\nimport * as Material from './material.js';\nimport * as Shared from './shared.js';\nimport * as Shapes from './shapes.js';\nimport * as Utils from './utils.js';\nimport {info} from './log.js';\n\n\nconst\n  lengthScale = Shared.LENGTH_SCALE,\n  stepBackMult = 10,\n  INITIAL_STEP_BACK_MULT = 10;\n\n\nexport default class Scene {\n  constructor(ui) {\n    this.ui = ui;\n    this.objects = {};\n    this.mouse = new Vector2;\n    this.raycaster = new Raycaster;\n    //this.raycaster = new CustomRaycaster;\n    this.raycaster.params.Points.threshold = 3;\n    ui.addClickCb((click) => {\n        this.onClick(click);\n      });\n    this.stars = null;\n    // TODO: Generalize this when other stars centered.  Used as\n    // parent for searches.\n    this.sun = null;\n    this.asterisms = null;\n  }\n\n\n  /**\n   * Add an object to the scene.\n   * @param {!object} props object properties, must include type.\n   */\n  add(props) {\n    const name = props.name;\n    let parentObj = this.objects[props.parent];\n    let parentOrbitPosition = this.objects[props.parent + '.orbitPosition'];\n    if (props.name == 'milkyway' || props.name == 'sun') {\n      parentObj = parentOrbitPosition = this.ui.scene;\n    }\n    if (!parentObj || !parentOrbitPosition) {\n      throw new Error(`No parent obj: ${parentObj} or pos: ${parentOrbitPosition} for ${name}`);\n    }\n    // Add to scene in reference frame of parent's orbit position,\n    // e.g. moons orbit planets, so they have to be added to the\n    // planet's orbital center.\n    parentOrbitPosition.add(this.objectFactory(props));\n  }\n\n\n  objectFactory(props) {\n    switch (props.type) {\n    case 'galaxy': return this.newGalaxy(props);\n    case 'stars':\n      this.stars = new Stars(props, () => {\n          this.stars.showLabels();\n        });\n      return this.stars;\n    case 'star':\n        this.sun = new Star(props, this.objects, this.ui);\n        return this.sun;\n    case 'planet': return new Planet(this, props);\n    case 'moon': return new Planet(this, props, true);\n    }\n    throw new Error(`Object has unknown type: ${props.type}`);\n  }\n\n\n  /**\n   * A primary scene object composed.\n   */\n  newObject(name, props, onClick) {\n    const obj = this.newGroup(name, props);\n    if (!onClick) {\n      throw new Error('Must provide an onClick handler');\n    }\n    obj.onClick = onClick;\n    return obj;\n  }\n\n\n  /**\n   * A secondary grouping of scene objects.\n   * @param name Prefix, attached to .frame suffix.\n   * @param props Optional props to attach to a .props field on the frame.\n   */\n  newGroup(name, props) {\n    const obj = new Object3D;\n    this.objects[name] = obj;\n    obj.name = name;\n    if (props) {\n      obj.props = props;\n    }\n    return obj;\n  }\n\n\n  targetNamed(name) {\n    this.setTarget(name);\n    this.lookAtTarget();\n  }\n\n\n  targetParent() {\n    const cObj = Shared.targets.cur;\n    if (cObj && cObj.props && cObj.props.parent) {\n      this.setTarget(cObj.props.parent);\n    }\n  }\n\n\n  targetNode(index) {\n    const cObj = Shared.targets.cur;\n    if (cObj && cObj.props && cObj.props.system && cObj.props.system) {\n      const sys = cObj.props.system;\n      if (sys[index - 1]) {\n        this.setTarget(sys[index - 1]);\n      }\n    }\n  }\n\n\n  targetCurNode() {\n    const cObj = Shared.targets.cur;\n    if (cObj && cObj.props && cObj.props.name) {\n      this.setTarget(cObj.props.name);\n    }\n  }\n\n\n  setTarget(name) {\n    const obj = this.objects[name];\n    if (!obj) {\n      throw new Error(`scene#setTarget: no matching target: ${name}`);\n    }\n    Shared.targets.obj = obj;\n  }\n\n\n  lookAtTarget() {\n    if (!Shared.targets.obj) {\n      console.error('scene.js#lookAtTarget: no target obj to look at.');\n      return;\n    }\n    const obj = Shared.targets.obj;\n    const tPos = Shared.targets.pos;\n    this.ui.scene.updateMatrixWorld();\n    tPos.setFromMatrixPosition(obj.matrixWorld);\n    this.ui.camera.lookAt(tPos);\n  }\n\n\n  goTo() {\n    if (!Shared.targets.obj) {\n      console.error('Scene.goTo called with no target obj.');\n      return;\n    }\n    const obj = Shared.targets.obj;\n    const tPos = Shared.targets.pos;\n    this.ui.scene.updateMatrixWorld();\n    tPos.setFromMatrixPosition(obj.matrixWorld);\n    const pPos = new Vector3;\n    const cPos = new Vector3;\n    const surfaceAltitude = obj.props.radius.scalar * lengthScale;\n    const stepBackMult = INITIAL_STEP_BACK_MULT;\n    pPos.set(0, 0, 0); // TODO(pablo): maybe put platform at surfaceAltitude\n    cPos.set(0, 0, surfaceAltitude * stepBackMult);\n    obj.orbitPosition.add(this.ui.camera.platform);\n    this.ui.camera.platform.position.copy(pPos);\n    this.ui.camera.platform.lookAt(Shared.targets.origin);\n    this.ui.camera.position.copy(cPos);\n    this.ui.camera.lookAt(tPos);\n    Shared.targets.track = Shared.targets.cur = Shared.targets.obj;\n    this.ui.controls.update();\n  }\n\n\n  track(name) {\n    if (Shared.targets.track) {\n      Shared.targets.track = null;\n    } else {\n      Shared.targets.track = Shared.targets.obj;\n    }\n  }\n\n\n  follow(name) {\n    if (Shared.targets.follow) {\n      delete Shared.targets.follow.postAnimCb;\n      Shared.targets.follow = null;\n    } else {\n      if (Shared.targets.obj) {\n        if (Shared.targets.obj.orbitPosition) {\n          // Follow the orbit position for less jitter.\n          const followed = Shared.targets.obj.orbitPosition;\n          Shared.targets.follow = followed;\n\n          followed.postAnimCb = (obj) => {\n            this.ui.camera.platform.lookAt(Shared.targets.origin);\n          };\n\n          followed.postAnimCb(followed);\n        } else {\n          console.error('Target to follow has no orbitPosition property.');\n        }\n      } else {\n        console.error('No target object to follow.');\n      }\n    }\n  }\n\n\n  onClick(mouse) {\n    if (true) return; // Disable picking for now.\n    this.ui.scene.updateMatrixWorld();\n    this.raycaster.setFromCamera(mouse, this.ui.camera);\n    const t = Date.now();\n    const intersects = this.raycaster.intersectObjects(this.ui.scene.children, true);\n    const elapsedSeconds = (Date.now() - t) / 1000;\n    if (elapsedSeconds > 0.1) {\n      console.error('Scene picking taking a long time (seconds): ', elapsedSeconds);\n    }\n    if (intersects.length == 0) {\n      return;\n    }\n    //console.log('checking all the things');\n    let nearestMeshIntersect, nearestPointIntersect,\n      nearestStarPointIntersect, nearestDefaultIntersect;\n    // TODO: this is looping through all 8k asterisms.. that right?\n    for (let i = 0; i < intersects.length; i++) {\n      const intersect = intersects[i];\n      const dist = intersect.distance;\n      const obj = intersect.object;\n      if (obj.isAnchor) {\n        console.log('raycast skipping anchor');\n        continue;\n      }\n      if (obj.type == 'Line') {\n        continue;\n      }\n      //console.log(`intersect ${i} dist: ${dist}, type: ${obj.type}, obj: `, obj);\n      switch (obj.type) {\n        case 'Mesh': {\n          if (nearestMeshIntersect\n              && nearestMeshIntersect.distance < dist) {\n            continue;\n          }\n          nearestMeshIntersect = intersect;\n        } break;\n        case 'Points': {\n          if (obj.isStarPoints) {\n            if (nearestStarPointIntersect\n                && nearestStarPointIntersect.distanceToRay < intersect.distanceToRay) {\n              continue;\n            }\n            //console.log('New nearest star point: ', intersect);\n            nearestStarPointIntersect = intersect;\n          } else {\n            if (nearestPointIntersect\n                && nearestPointIntersect.distance < dist) {\n              continue;\n            }\n            //console.log('New nearest point: ', intersect);\n            nearestPointIntersect = intersect;\n          }\n        } break;\n        case 'Group': {\n          //console.log('GROUP CLICKED');\n        } break;\n        default: {\n          //console.log('Raycasting default handler for object type: ', obj.type);\n          if (nearestDefaultIntersect\n              && nearestDefaultIntersect.distance < dist) {\n            continue;\n          }\n          //console.log('New nearest default: ', intersect);\n          nearestDefaultIntersect = intersect;\n        }\n      }\n    }\n    const nearestIntersect = nearestMeshIntersect ? nearestMeshIntersect\n      : nearestPointIntersect ? nearestPointIntersect\n      : nearestStarPointIntersect ? nearestStarPointIntersect\n      : nearestDefaultIntersect ? nearestDefaultIntersect\n      : null;\n    if (!nearestIntersect) {\n      throw new Error(\"Picking did not yield an intersect.  Intersects: \", intersects);\n    }\n    let obj = nearestIntersect.object;\n    //console.log('Nearest object type: ', obj.isStarPoints ? '<star points>' : obj.type);\n    let firstName;\n    do {\n      if (obj.name || (obj.props && obj.props.name) && !firstName) {\n        firstName = obj.name || (obj.props && obj.props.name);\n      }\n      if (obj.onClick) {\n        obj.onClick(mouse, nearestIntersect, obj);\n        break;\n      }\n      if (obj == obj.parent) {\n        console.error('no clickable object found in path to root.');\n        break;\n      }\n    } while (obj = obj.parent);\n  }\n\n\n  toggleAsterisms() {\n    if (this.asterisms == null) {\n      const asterisms = new Asterisms(this.stars, () => {\n          this.stars.add(asterisms);\n          console.log(`Asterisms count:`, asterisms.catalog.numAsterisms);\n          this.asterisms = asterisms;\n        });\n    }\n    if (this.asterisms) {\n      this.asterisms.visible = !this.asterisms.visible;\n    }\n  }\n\n\n  toggleOrbits() {\n    Utils.visitToggleProperty(this.sun, 'name', 'orbit', 'visible');\n  }\n\n\n  togglePlanetLabels() {\n    Utils.visitToggleProperty(this.sun, 'name', 'label', 'visible');\n  }\n\n\n  toggleStarLabels() {\n    this.stars.labelLOD.visible = !this.stars.labelLOD.visible;\n  }\n\n\n  newGalaxy(galaxyProps) {\n    const group = this.newObject(galaxyProps.name, galaxyProps, (click) => {\n        //console.log('Well done, you found the galaxy!');\n      });\n    this.objects[galaxyProps.name + '.orbitPosition'] = group;\n    return group;\n  }\n}\n", "import * as THREE from 'three';\nimport Animation from './Animation.js';\nimport ControlPanel from './ControlPanel.js';\nimport Keys from './Keys.js';\nimport Loader from './Loader.js';\nimport Reify from './reify.js';\nimport Scene from './Scene.js';\nimport * as Shapes from './shapes.js';\nimport ThreeUi from './ThreeUI.js';\nimport Time from './Time.js';\nimport * as Shared from './shared.js';\nimport * as Utils from './utils.js';\n\n\nconst DEFAULT_TARGET = 'sun';\nconst elt = (id) => { return document.getElementById(id); }\n\n/** Main application class. */\nexport default class Celestiary {\n  constructor(canvasContainer, navElt, setTimeStr) {\n    Utils.assertArgs(arguments, 3);\n    this.time = new Time(setTimeStr);\n    this.animation = new Animation(this.time);\n    canvasContainer.style.width = window.innerWidth + 'px';\n    canvasContainer.style.height = window.innerHeight + 'px';\n    const animCb = (scene) => {\n      this.animation.animate(scene);\n      if (Shared.targets.track) {\n        this.scene.lookAtTarget();\n      }\n    };\n    this.ui = new ThreeUi(canvasContainer, animCb);\n    this.scene = new Scene(this.ui);\n    this.loader = new Loader();\n    this.controlPanel = new ControlPanel(navElt, this.loader);\n    this.load();\n    this.setupListeners();\n    this.navVisible = true;\n    // these are here for convenience debugging from jsconsole.\n    this.shared = Shared;\n    this.shapes = Shapes;\n    this.three = THREE;\n    this.utils = Utils;\n    this.toggleHelp = null;\n  }\n\n\n  getTime() {\n    if (this.time === null) {\n      throw new Error('Null time');\n    }\n    return this.time;\n  }\n\n\n  setTitle(parts) {\n    let title = 'Celestiary';\n    if (parts.length >= 1) {\n      title = Utils.capitalize(parts[parts.length - 1]);\n    }\n    document.title = title;\n  }\n\n\n  load() {\n    this.onLoadCb = (name, obj) => {\n      Reify(obj);\n      this.scene.add(obj);\n    };\n\n    this.onDoneCb = (path, obj) => {\n      this.controlPanel.showNavDisplay(path.split('/'), this.loader);\n      // TODO(pablo): Hack to handle load order.  The path is loaded,\n      // but not yet animated so positions will be incorrect.  So\n      // schedule this after the next pass.\n      setTimeout(() => {\n          const parts = path.split('/');\n          let targetName = parts[parts.length - 1];\n          if (targetName.indexOf('-') >= 0) {\n            targetName = targetName.split('-')[0];\n          }\n          this.scene.targetNamed(targetName);\n          this.scene.goTo();\n          this.setTitle(parts);\n        }, 0);\n    };\n\n    let path;\n    if (location.hash) {\n      path = location.hash.substring(1);\n    } else {\n      path = DEFAULT_TARGET;\n      location.hash = path;\n    }\n    this.loader.loadPath('milkyway', this.onLoadCb, () => {\n      this.loader.loadPath(path, this.onLoadCb, this.onDoneCb, () => {\n        // On error.\n        setTimeout(() => {\n          location.hash = DEFAULT_TARGET;\n        }, 1000)\n      });\n    });\n  }\n\n\n  goTo() {\n    const tObj = this.shared.targets.obj;\n    if (tObj) {\n      if (tObj.props && tObj.props.name) {\n        const path = this.loader.pathByName[tObj.props.name];\n        if (path) {\n          window.location.hash = path;\n        } else {\n          console.error(`no loaded path for ${tObj.props.name}: ${path}`);\n        }\n      } else {\n        console.error('target obj has no name prop: ', tObj);\n      }\n    } else {\n      console.error('no target obj!');\n    }\n  }\n\n\n  setupListeners() {\n    window.addEventListener('hashchange', (e) => {\n        this.loader.loadPath((window.location.hash || '#').substring(1), this.onLoadCb, this.onDoneCb);\n      },\n      false);\n\n    const k = new Keys();\n    k.map('Escape', () => { this.hideActiveDialog(); },\n          'Hide active dialog');\n    k.map(' ', () => { this.time.togglePause(); },\n          'Toggle time pause');\n    k.map(',', () => { this.ui.multFov(0.9); },\n          'Narrow field-of-vision');\n    k.map('.', () => { this.ui.multFov(1.1); },\n          'Broaden field-of-vision');\n    k.map('/', () => { this.ui.resetFov(); },\n          'Reset field-of-vision to ' + Shared.INITIAL_FOV + '\u00BA');\n    k.map('0', () => { this.scene.targetCurNode(); },\n          'Target current system');\n    for (let i = 1; i <= 9; i++) {\n      k.map(''+i, () => { const ndx = i; this.scene.targetNode(ndx); },\n            `Look at child ${i} of current system`);\n    }\n    k.map(';', () => { this.time.changeTimeScale(0); },\n          'Change time scale to real-time');\n    k.map('c', () => { this.scene.lookAtTarget(); },\n          'Look at target');\n    k.map('f', () => { this.scene.follow(); },\n          'Follow current node');\n    k.map('g', () => { this.goTo(); },\n          'Go to target node');\n    k.map('j', () => { this.time.invertTimeScale();},\n          'Reverse time');\n    k.map('k', () => { this.time.changeTimeScale(-1); },\n          'Slow down time');\n    k.map('l', () => { this.time.changeTimeScale(1); },\n          'Speed up time');\n    k.map('n', () => { this.time.setTimeToNow(); },\n          'Set time to now');\n    k.map('t', () => { this.scene.track(); },\n          'Track target node');\n    k.map('u', () => { this.scene.targetParent(); },\n          'Look at parent of current system');\n    k.map('A', () => { this.scene.toggleAsterisms(); },\n          'Show/hide asterisms');\n    k.map('O', () => { this.scene.toggleOrbits(); },\n          'Show/hide orbits');\n    k.map('P', () => { this.scene.togglePlanetLabels(); },\n          'Show/hide planet and moon names');\n    k.map('S', () => { this.scene.toggleStarLabels(); },\n          'Show/hide star names');\n    k.map('V', () => {\n      const panels = [elt('nav-id'), elt('top-right')];\n        panels.map((panel) => { panel.style.visibility = this.navVisible ? 'hidden' : 'visible' });\n        this.navVisible = !this.navVisible;\n      }, 'Show/hide navigation panels');\n    this.keys = k;\n  }\n\n\n  hideActiveDialog() {\n    document.querySelectorAll('.dialog').forEach(elt => this.hideElt(elt));\n  }\n\n\n  hideElt(elt) {\n    elt.style.display = 'none';\n  }\n\n\n  /** @return True iff showing */\n  toggleEltDisplay(elt) {\n    if (elt.style.display == 'block') {\n      this.hideElt(elt);\n      return false;\n    } else {\n      this.hideActiveDialog();\n      elt.style.display = 'block';\n      return true;\n    }\n  }\n\n\n  hideHelpOnEscape() {\n    const keysElt = elt('keys-id');\n    keysElt.style.display = 'none';\n  }\n}\n", "import React from 'react';\n\n\nfunction updateTimeMsg(time) {\n  let msg = '';\n  if (time.timeScale == 1) {\n    msg = 'real-time';\n  } else {\n    msg = time.timeScale.toLocaleString() + ' secs/s';\n  }\n  if (time.pause) {\n    msg += ' (paused)';\n  }\n  return msg;\n}\n\n\nexport default function TimePanel({time, timeStr}) {\n  const [timeScale, setTimeScale] = React.useState('');\n  React.useEffect(() => {\n    setTimeScale(updateTimeMsg(time));\n  }, [timeStr]); // TODO: shouldn't depend on this to set time-scale.\n  return (\n<div id=\"time-id\">\n  <div id=\"date-id\">{timeStr}</div>\n  <div id=\"time-scale-id\">{timeScale}</div>\n  <div id=\"time-controls-id\">\n    <button onClick={() => {time.changeTimeScale(1)}}>+</button>\n    <button onClick={() => {time.changeTimeScale(-1)}}>-</button>\n    <button onClick={() => {time.changeTimeScale(0)}}>=</button>\n    <button onClick={() => {time.invertTimeScale()}}>/</button>\n  </div>\n</div>);\n}\n"],
  "mappings": "gYAAA,kBAAkB,2BCAlB,iBAAkB,2BAIH,sBAAuB,CACpC,GAAM,CAAC,KAAM,SAAW,qBAAM,SAAS,IACjC,WAAa,IAAM,CAAE,QAAQ,CAAC,OACpC,MACE,uEACE,mCAAC,SAAD,CAAQ,QAAS,WAAY,UAAU,cAAa,SACnD,MAAQ,mCAAC,MAAD,CAAO,WAAY,cAKlC,eAAe,CAAC,YAAa,CAC3B,MACF,oCAAC,MAAD,CAAK,UAAU,UACb,mCAAC,SAAD,CAAQ,QAAS,YAAY,KAC7B,mCAAC,KAAD,KAAI,SAAU,0CAGd,mCAAC,KAAD,KAAI,QACJ,mCAAC,KAAD,KACE,mCAAC,KAAD,KAAI,0GAIN,mCAAC,KAAD,KAAI,YACJ,mCAAC,KAAD,KACE,mCAAC,KAAD,KAAI,yCACJ,mCAAC,KAAD,KAAI,sDACJ,mCAAC,KAAD,KAAI,6CACJ,mCAAC,KAAD,KAAI,yEACJ,mCAAC,KAAD,KAAI,uBACJ,mCAAC,KAAD,KAAI,uCACJ,mCAAC,KAAD,KAAI,mCAEN,mCAAC,KAAD,KAAI,YACJ,mCAAC,KAAD,KACE,mCAAC,KAAD,KAAI,kBACJ,mCAAC,KAAD,KAAI,kBACJ,mCAAC,KAAD,KAAI,iCAEN,mCAAC,KAAD,KAAI,cACJ,mCAAC,KAAD,KACE,mCAAC,KAAD,KAAI,mCAAC,KAAD,CAAM,GAAG,UAAS,+BACtB,mCAAC,KAAD,KAAI,mCAAC,IAAD,CAAG,KAAK,kDAAkD,OAAO,UAAS,2BC1ClF,mBAA+B,CAC7B,YAAY,KAAM,CAChB,KAAK,KAAO,KACZ,KAAK,OAAS,GAAI,SAAQ,EAAG,EAAG,GAIlC,QAAQ,MAAO,CACb,KAAK,KAAK,aACV,KAAK,cAAc,MAAO,KAAK,KAAK,QAAU,KAQhD,cAAc,OAAQ,YAAa,CAIjC,GAHI,OAAO,WACT,OAAO,UAAU,KAAK,MAEpB,OAAO,uBAAwB,CAQjC,GAAM,OAAQ,IAAM,KAAK,GAAK,YAAc,MAAe,MAC3D,OAAO,yBAAyB,KAAK,OAAQ,OAI/C,GAAI,OAAO,MAAO,CAChB,GAAM,cAAe,OAAO,MAAM,aAC5B,QAAU,OAAO,MAAM,cAAc,OAAgB,aACrD,QAAU,QAAU,KAAK,KAAK,EAAM,KAAK,IAAI,aAAc,IAE3D,MAAQ,GAAO,YAAc,OAAO,MAAM,oBAAoB,OAAgB,MAC9E,EAAI,QAAU,KAAK,IAAI,OACvB,EAAI,EACJ,EAAI,QAAU,KAAK,IAAI,OAE7B,OAAO,SAAS,IAAI,EAAG,EAAG,GACtB,OAAO,YACT,OAAO,WAAW,QAItB,OAAW,OAAO,QAAO,SAAU,CACjC,GAAM,OAAQ,OAAO,SAAS,KAC9B,KAAK,cAAc,MAAO,gBCpDhC,sBAAkC,CAChC,YAAY,aAAc,OAAQ,CAChC,KAAK,aAAe,aACpB,KAAK,OAAS,OAGhB,cAAc,KAAM,CAClB,MAAO,MAAK,KAAK,OAAS,GAG5B,eAAe,KAAM,CACnB,GAAI,QAAS,GACb,OAAS,GAAI,EAAG,EAAI,KAAK,OAAQ,IAAK,CACpC,GAAM,MAAO,KAAK,MAAM,EAAG,EAAI,GAAG,KAAK,KACjC,KAAO,KAAK,GAClB,AAAI,GAAK,KAAK,OAAS,EACrB,QAAU,WAAW,MAErB,QAAU,aAAc,KAAM,KAAO,WAAW,MAAQ,OAEtD,EAAI,KAAK,OAAS,GACpB,SAAU,UAId,GAAI,MAAO,OAAS;AAAA,EACd,WAAa,KAAK,KAAK,KAC7B,MAAQ,KAAK,kBAAkB,KAAK,OAAO,OAAO,KAAK,cAAc,OACtC,WAAY,GAAO,IAClD,MAAQ;AAAA,EACR,KAAK,aAAa,UAAY,KAC9B,AAAU,gBAAgB,KAAK,cAIjC,kBAAkB,IAAK,WAAY,QAAS,SAAU,CACpD,GAAI,MAAO,GACX,OAAS,QAAQ,KACf,GAAI,QAAQ,QAAU,MAAQ,UAAY,KAAK,WAAW,cAGtD,IAAI,eAAe,MAAO,CAC5B,GAAI,KAAM,IAAI,MACd,GAAI,MAAQ,UAAY,MAAO,MAAO,UAAY,MAAM,QAAQ,MAAQ,IAAI,QAAU,EACpF,SAMF,GAJA,MAAQ,OACH,SACH,OAAQ,KAAO,MAEb,cAAe,SAAS,CAC1B,OAAQ,UACH,SAAU,IAAM,IAAI,UAAU,QAAQ,UAAU,MAAO,UACvD,OAAQ,IAAM,IAAI,UAAU,QAAQ,UAAU,MAAO,UACrD,gBAEH,AAAI,MAAO,KAAI,QAAU,UACvB,KAAI,OAAS,WAAW,IAAI,SAC9B,IAAI,OAAS,IAAI,OAAO,cAAc,GACtC,IAAM,IAAI,WACV,UACG,sBACH,IAAM,YAAY,IAAI,QACtB,UACG,yBACH,IAAM,YAAY,IAAI,QACtB,MAEF,MAAQ,YACC,cAAe,OACxB,AAAI,MAAQ,SACV,MAAQ;AAAA,EAER,MAAQ;AAAA,EAEV,MAAQ,KAAK,kBAAkB,IAAK,WAAY,GAAM,MAAQ,UAC9D,MAAQ;AAAA,UACC,cAAe,QACxB,MAAQ;AAAA,EACR,MAAQ,KAAK,kBAAkB,IAAK,WAAY,GAAO,IACvD,MAAQ;AAAA,MACH,CACL,GAAI,SAAU,CACZ,GAAI,MAAO,WACX,AAAI,WAAW,OAAS,GACtB,OAAQ,KAEV,MAAQ,IACR,MAAQ,aAAe,KAAO,KAC9B,MAAQ,WAAW,SAEnB,OAAQ,IAEV,AAAI,UACF,OAAQ,QAGZ,MAAQ;AAAA,EAGZ,MAAO,QAKX,qBAAqB,EAAG,CACtB,GAAM,aAAc,MAAQ,IACxB,IAAM,GACJ,MAAQ,SAAS,EAAI,aAC3B,AAAI,MAAQ,GACV,IAAK,MAAQ,YACb,KAAO,GAAG,UAEZ,GAAM,MAAO,SAAS,EAAI,OAC1B,AAAI,KAAO,GACT,IAAK,KAAO,MACZ,KAAO,IAAI,SAEb,GAAM,OAAQ,SAAS,EAAI,MAC3B,AAAI,MAAQ,GACV,IAAK,MAAQ,KACb,KAAO,IAAI,UAEb,GAAM,SAAU,SAAS,EAAI,IAC7B,AAAI,QAAU,GACZ,IAAK,QAAU,GACf,KAAO,IAAI,YAEb,GAAM,SAAU,SAAS,GACzB,MAAI,SAAU,GACZ,MAAO,IAAI,YAEN,IC7HM,yBAA0B,OAAQ,UAAW,KAAM,IAAM,CAEtE,KAAK,IAAM,GAAI,KAAK,OAAQ,WAG5B,KAAK,KAAO,MAAQ,EACpB,KAAK,IAAM,KAAO,IAElB,KAAK,OAAS,CACZ,KAAM,GACN,KAAM,GACN,IAAK,GACL,OAAQ,CAAE,UAAW,GACrB,OAAQ,IAGV,OAAO,iBAAkB,KAAK,OAAQ,CAClC,WAAY,CACV,IAAK,UAAY,CACf,eAAQ,KAAM,yEACP,KAAK,WAMtB,iBAAkB,EAAG,EAAI,CACvB,MAAO,GAAE,cAAgB,EAAE,cAG7B,yBAA0B,OAAQ,UAAW,WAAY,UAAY,CACnE,GAAK,OAAO,UAAY,IACxB,QAAO,QAAS,UAAW,YACtB,YAAc,IAEjB,OADI,UAAW,OAAO,SACZ,EAAI,EAAG,EAAI,SAAS,OAAQ,EAAI,EAAG,IAC3C,gBAAiB,SAAU,GAAK,UAAW,WAAY,IAK7D,OAAO,OAAQ,gBAAgB,UAAW,CAEtC,cAAe,EAEf,IAAK,SAAW,OAAQ,UAAY,CAElC,KAAK,IAAI,IAAK,OAAQ,YAGxB,cAAe,SAAW,OAAQ,OAAS,CACzC,AAAO,QAAU,OAAO,oBACtB,MAAK,IAAI,OAAO,sBAAuB,OAAO,aAC9C,KAAK,IAAI,UAAU,IAAK,OAAO,EAAG,OAAO,EAAG,IAAM,UAAW,QAAS,IAAK,KAAK,IAAI,QAAS,aACxF,AAAO,QAAU,OAAO,qBAC7B,MAAK,IAAI,OAAO,IAAK,OAAO,EAAG,OAAO,EAAK,QAAO,KAAO,OAAO,KAAU,QAAO,KAAO,OAAO,MAAQ,UAAW,QAClH,KAAK,IAAI,UAAU,IAAK,EAAG,EAAG,IAAM,mBAAoB,OAAO,cAE/D,QAAQ,MAAO,8CAInB,gBAAiB,SAAW,OAAQ,UAAW,eAAiB,CAC9D,GAAI,YAAa,gBAAkB,GACnC,uBAAiB,OAAQ,KAAM,WAAY,WAC3C,WAAW,KAAM,SACV,YAIT,iBAAkB,SAAW,QAAS,UAAW,eAAiB,CAChE,GAAI,YAAa,gBAAkB,GACnC,GAAK,MAAM,QAAS,WAAc,GAChC,eAAQ,KAAM,8DACP,WAET,OAAU,GAAI,EAAG,EAAI,QAAQ,OAAQ,EAAI,EAAG,IAC1C,gBAAiB,QAAS,GAAK,KAAM,WAAY,WAEnD,kBAAW,KAAM,SACV,cCvEb,GACE,aAAqB,aADvB,GAGE,wBAAyB,GAG3B,WAA2B,CACzB,YAAY,GAAI,CACd,KAAK,GAAK,GACV,KAAK,QAAU,GACf,KAAK,MAAQ,GAAI,SACjB,KAAK,UAAY,GAAI,WAErB,KAAK,UAAU,OAAO,OAAO,UAAY,EACzC,GAAG,WAAW,AAAC,OAAU,CACrB,KAAK,QAAQ,SAEjB,KAAK,MAAQ,KAGb,KAAK,IAAM,KACX,KAAK,UAAY,KAQnB,IAAI,MAAO,CACT,GAAM,MAAO,MAAM,KACf,UAAY,KAAK,QAAQ,MAAM,QAC/B,oBAAsB,KAAK,QAAQ,MAAM,OAAS,kBAItD,GAHI,OAAM,MAAQ,YAAc,MAAM,MAAQ,QAC5C,WAAY,oBAAsB,KAAK,GAAG,OAExC,CAAC,WAAa,CAAC,oBACjB,KAAM,IAAI,OAAM,kBAAkB,qBAAqB,2BAA2B,QAKpF,oBAAoB,IAAI,KAAK,cAAc,QAI7C,cAAc,MAAO,CACnB,OAAQ,MAAM,UACT,SAAU,MAAO,MAAK,UAAU,WAChC,QACH,YAAK,MAAQ,GAAI,OAAM,MAAO,IAAM,CAChC,KAAK,MAAM,eAER,KAAK,UACT,OACD,YAAK,IAAM,GAAI,MAAK,MAAO,KAAK,QAAS,KAAK,IACvC,KAAK,QACX,SAAU,MAAO,IAAI,QAAO,KAAM,WAClC,OAAQ,MAAO,IAAI,QAAO,KAAM,MAAO,IAE5C,KAAM,IAAI,OAAM,4BAA4B,MAAM,QAOpD,UAAU,KAAM,MAAO,QAAS,CAC9B,GAAM,KAAM,KAAK,SAAS,KAAM,OAChC,GAAI,CAAC,QACH,KAAM,IAAI,OAAM,mCAElB,WAAI,QAAU,QACP,IAST,SAAS,KAAM,MAAO,CACpB,GAAM,KAAM,GAAI,UAChB,YAAK,QAAQ,MAAQ,IACrB,IAAI,KAAO,KACP,OACF,KAAI,MAAQ,OAEP,IAIT,YAAY,KAAM,CAChB,KAAK,UAAU,MACf,KAAK,eAIP,cAAe,CACb,GAAM,MAAO,AAAO,QAAQ,IAC5B,AAAI,MAAQ,KAAK,OAAS,KAAK,MAAM,QACnC,KAAK,UAAU,KAAK,MAAM,QAK9B,WAAW,MAAO,CAChB,GAAM,MAAO,AAAO,QAAQ,IAC5B,GAAI,MAAQ,KAAK,OAAS,KAAK,MAAM,QAAU,KAAK,MAAM,OAAQ,CAChE,GAAM,KAAM,KAAK,MAAM,OACvB,AAAI,IAAI,MAAQ,IACd,KAAK,UAAU,IAAI,MAAQ,KAMjC,eAAgB,CACd,GAAM,MAAO,AAAO,QAAQ,IAC5B,AAAI,MAAQ,KAAK,OAAS,KAAK,MAAM,MACnC,KAAK,UAAU,KAAK,MAAM,MAK9B,UAAU,KAAM,CACd,GAAM,KAAM,KAAK,QAAQ,MACzB,GAAI,CAAC,IACH,KAAM,IAAI,OAAM,wCAAwC,QAE1D,AAAO,QAAQ,IAAM,IAIvB,cAAe,CACb,GAAI,CAAC,AAAO,QAAQ,IAAK,CACvB,QAAQ,MAAM,oDACd,OAEF,GAAM,KAAM,AAAO,QAAQ,IACrB,KAAO,AAAO,QAAQ,IAC5B,KAAK,GAAG,MAAM,oBACd,KAAK,sBAAsB,IAAI,aAC/B,KAAK,GAAG,OAAO,OAAO,MAIxB,MAAO,CACL,GAAI,CAAC,AAAO,QAAQ,IAAK,CACvB,QAAQ,MAAM,yCACd,OAEF,GAAM,KAAM,AAAO,QAAQ,IACrB,KAAO,AAAO,QAAQ,IAC5B,KAAK,GAAG,MAAM,oBACd,KAAK,sBAAsB,IAAI,aAC/B,GAAM,MAAO,GAAI,SACX,KAAO,GAAI,SACX,gBAAkB,IAAI,MAAM,OAAO,OAAS,YAC5C,aAAe,uBACrB,KAAK,IAAI,EAAG,EAAG,GACf,KAAK,IAAI,EAAG,EAAG,gBAAkB,cACjC,IAAI,cAAc,IAAI,KAAK,GAAG,OAAO,UACrC,KAAK,GAAG,OAAO,SAAS,SAAS,KAAK,MACtC,KAAK,GAAG,OAAO,SAAS,OAAO,AAAO,QAAQ,QAC9C,KAAK,GAAG,OAAO,SAAS,KAAK,MAC7B,KAAK,GAAG,OAAO,OAAO,MACtB,AAAO,QAAQ,MAAQ,AAAO,QAAQ,IAAM,AAAO,QAAQ,IAC3D,KAAK,GAAG,SAAS,SAInB,MAAM,KAAM,CACV,AAAI,AAAO,QAAQ,MACjB,AAAO,QAAQ,MAAQ,KAEvB,AAAO,QAAQ,MAAQ,AAAO,QAAQ,IAK1C,OAAO,KAAM,CACX,GAAI,AAAO,QAAQ,OACjB,MAAO,AAAO,SAAQ,OAAO,WAC7B,AAAO,QAAQ,OAAS,aAEpB,AAAO,QAAQ,IACjB,GAAI,AAAO,QAAQ,IAAI,cAAe,CAEpC,GAAM,UAAW,AAAO,QAAQ,IAAI,cACpC,AAAO,QAAQ,OAAS,SAExB,SAAS,WAAa,AAAC,KAAQ,CAC7B,KAAK,GAAG,OAAO,SAAS,OAAO,AAAO,QAAQ,SAGhD,SAAS,WAAW,cAEpB,SAAQ,MAAM,uDAGhB,SAAQ,MAAM,+BAMpB,QAAQ,MAAO,CACH,OAgBV,OAAS,GAAI,EAAG,EAAI,WAAW,OAAQ,IAAK,CAC1C,GAAM,WAAY,WAAW,GACvB,KAAO,UAAU,SACjB,KAAM,UAAU,OACtB,GAAI,KAAI,SAAU,CAChB,QAAQ,IAAI,2BACZ,SAEF,GAAI,KAAI,MAAQ,OAIhB,OAAQ,KAAI,UACL,OAAQ,CACX,GAAI,sBACG,qBAAqB,SAAW,KACrC,SAEF,qBAAuB,UACvB,UACG,SACH,GAAI,KAAI,aAAc,CACpB,GAAI,2BACG,0BAA0B,cAAgB,UAAU,cACzD,SAGF,0BAA4B,cACvB,CACL,GAAI,uBACG,sBAAsB,SAAW,KACtC,SAGF,sBAAwB,UAE1B,UACG,QAEH,cACO,CAEP,GAAI,yBACG,wBAAwB,SAAW,KACxC,SAGF,wBAA0B,aA+BlC,iBAAkB,CAChB,GAAI,KAAK,WAAa,KAAM,CAC1B,GAAM,WAAY,GAAI,WAAU,KAAK,MAAO,IAAM,CAC9C,KAAK,MAAM,IAAI,WACf,QAAQ,IAAI,mBAAoB,UAAU,QAAQ,cAClD,KAAK,UAAY,YAGvB,AAAI,KAAK,WACP,MAAK,UAAU,QAAU,CAAC,KAAK,UAAU,SAK7C,cAAe,CACb,AAAM,oBAAoB,KAAK,IAAK,OAAQ,QAAS,WAIvD,oBAAqB,CACnB,AAAM,oBAAoB,KAAK,IAAK,OAAQ,QAAS,WAIvD,kBAAmB,CACjB,KAAK,MAAM,SAAS,QAAU,CAAC,KAAK,MAAM,SAAS,QAIrD,UAAU,YAAa,CACrB,GAAM,OAAQ,KAAK,UAAU,YAAY,KAAM,YAAa,AAAC,OAAU,IAGvE,YAAK,QAAQ,YAAY,KAAO,kBAAoB,MAC7C,QCxVX,GAAM,gBAAiB,MACjB,KAAM,AAAC,IAAgB,SAAS,eAAe,IAGrD,gBAAgC,CAC9B,YAAY,gBAAiB,OAAQ,WAAY,CAC/C,AAAM,WAAW,UAAW,GAC5B,KAAK,KAAO,GAAI,MAAK,YACrB,KAAK,UAAY,GAAI,WAAU,KAAK,MACpC,gBAAgB,MAAM,MAAQ,OAAO,WAAa,KAClD,gBAAgB,MAAM,OAAS,OAAO,YAAc,KACpD,GAAM,QAAS,AAAC,OAAU,CACxB,KAAK,UAAU,QAAQ,OACnB,AAAO,QAAQ,OACjB,KAAK,MAAM,gBAGf,KAAK,GAAK,GAAI,SAAQ,gBAAiB,QACvC,KAAK,MAAQ,GAAI,OAAM,KAAK,IAC5B,KAAK,OAAS,GAAI,QAClB,KAAK,aAAe,GAAI,cAAa,OAAQ,KAAK,QAClD,KAAK,OACL,KAAK,iBACL,KAAK,WAAa,GAElB,KAAK,OAAS,eACd,KAAK,OAAS,eACd,KAAK,MAAQ,qBACb,KAAK,MAAQ,cACb,KAAK,WAAa,KAIpB,SAAU,CACR,GAAI,KAAK,OAAS,KAChB,KAAM,IAAI,OAAM,aAElB,MAAO,MAAK,KAId,SAAS,MAAO,CACd,GAAI,OAAQ,aACZ,AAAI,MAAM,QAAU,GAClB,OAAQ,AAAM,WAAW,MAAM,MAAM,OAAS,KAEhD,SAAS,MAAQ,MAInB,MAAO,CACL,KAAK,SAAW,CAAC,KAAM,MAAQ,CAC7B,cAAM,KACN,KAAK,MAAM,IAAI,MAGjB,KAAK,SAAW,CAAC,MAAM,MAAQ,CAC7B,KAAK,aAAa,eAAe,MAAK,MAAM,KAAM,KAAK,QAIvD,WAAW,IAAM,CACb,GAAM,OAAQ,MAAK,MAAM,KACrB,WAAa,MAAM,MAAM,OAAS,GACtC,AAAI,WAAW,QAAQ,MAAQ,GAC7B,YAAa,WAAW,MAAM,KAAK,IAErC,KAAK,MAAM,YAAY,YACvB,KAAK,MAAM,OACX,KAAK,SAAS,QACb,IAGP,GAAI,MACJ,AAAI,SAAS,KACX,KAAO,SAAS,KAAK,UAAU,GAE/B,MAAO,eACP,SAAS,KAAO,MAElB,KAAK,OAAO,SAAS,WAAY,KAAK,SAAU,IAAM,CACpD,KAAK,OAAO,SAAS,KAAM,KAAK,SAAU,KAAK,SAAU,IAAM,CAE7D,WAAW,IAAM,CACf,SAAS,KAAO,gBACf,SAMT,MAAO,CACL,GAAM,MAAO,KAAK,OAAO,QAAQ,IACjC,GAAI,KACF,GAAI,KAAK,OAAS,KAAK,MAAM,KAAM,CACjC,GAAM,MAAO,KAAK,OAAO,WAAW,KAAK,MAAM,MAC/C,AAAI,KACF,OAAO,SAAS,KAAO,KAEvB,QAAQ,MAAM,sBAAsB,KAAK,MAAM,SAAS,YAG1D,SAAQ,MAAM,gCAAiC,UAGjD,SAAQ,MAAM,kBAKlB,gBAAiB,CACf,OAAO,iBAAiB,aAAc,AAAC,GAAM,CACzC,KAAK,OAAO,SAAU,QAAO,SAAS,MAAQ,KAAK,UAAU,GAAI,KAAK,SAAU,KAAK,WAEvF,IAEF,GAAM,GAAI,GAAI,MACd,EAAE,IAAI,SAAU,IAAM,CAAE,KAAK,oBACvB,sBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,KAAK,eACvB,qBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,GAAG,QAAQ,KAC7B,0BACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,GAAG,QAAQ,MAC7B,2BACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,GAAG,YACrB,4BAAqC,YAAc,QACzD,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,MAAM,iBACxB,yBACN,OAAS,GAAI,EAAG,GAAK,EAAG,IACtB,EAAE,IAAI,GAAG,EAAG,IAAM,CAAE,GAAM,KAAM,EAAG,KAAK,MAAM,WAAW,MACnD,iBAAiB,uBAEzB,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,KAAK,gBAAgB,IACvC,kCACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,MAAM,gBACxB,kBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,MAAM,UACxB,uBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,QAClB,qBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,KAAK,mBACvB,gBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,KAAK,gBAAgB,KACvC,kBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,KAAK,gBAAgB,IACvC,iBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,KAAK,gBACvB,mBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,MAAM,SACxB,qBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,MAAM,gBACxB,oCACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,MAAM,mBACxB,uBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,MAAM,gBACxB,oBACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,MAAM,sBACxB,mCACN,EAAE,IAAI,IAAK,IAAM,CAAE,KAAK,MAAM,oBACxB,wBACN,EAAE,IAAI,IAAK,IAAM,CAEb,AADa,CAAC,KAAI,UAAW,KAAI,cAC1B,IAAI,AAAC,OAAU,CAAE,MAAM,MAAM,WAAa,KAAK,WAAa,SAAW,YAC9E,KAAK,WAAa,CAAC,KAAK,YACvB,+BACL,KAAK,KAAO,EAId,kBAAmB,CACjB,SAAS,iBAAiB,WAAW,QAAQ,MAAO,KAAK,QAAQ,OAInE,QAAQ,KAAK,CACX,KAAI,MAAM,QAAU,OAKtB,iBAAiB,KAAK,CACpB,MAAI,MAAI,MAAM,SAAW,QACvB,MAAK,QAAQ,MACN,IAEP,MAAK,mBACL,KAAI,MAAM,QAAU,QACb,IAKX,kBAAmB,CACjB,GAAM,SAAU,KAAI,WACpB,QAAQ,MAAM,QAAU,SCjN5B,kBAAkB,2BAGlB,uBAAuB,KAAM,CAC3B,GAAI,KAAM,GACV,MAAI,MAAK,WAAa,EACpB,IAAM,YAEN,IAAM,KAAK,UAAU,iBAAmB,UAEtC,KAAK,OACP,MAAO,aAEF,IAIM,mBAAmB,CAAC,KAAM,SAAU,CACjD,GAAM,CAAC,UAAW,cAAgB,sBAAM,SAAS,IACjD,6BAAM,UAAU,IAAM,CACpB,aAAa,cAAc,QAC1B,CAAC,UAEN,oCAAC,MAAD,CAAK,GAAG,WACN,oCAAC,MAAD,CAAK,GAAG,WAAW,SACnB,oCAAC,MAAD,CAAK,GAAG,iBAAiB,WACzB,oCAAC,MAAD,CAAK,GAAG,oBACN,oCAAC,SAAD,CAAQ,QAAS,IAAM,CAAC,KAAK,gBAAgB,KAAK,KAClD,oCAAC,SAAD,CAAQ,QAAS,IAAM,CAAC,KAAK,gBAAgB,MAAM,KACnD,oCAAC,SAAD,CAAQ,QAAS,IAAM,CAAC,KAAK,gBAAgB,KAAK,KAClD,oCAAC,SAAD,CAAQ,QAAS,IAAM,CAAC,KAAK,oBAAoB,OPpBtC,cAAe,CAC5B,GAAM,CAAC,WAAY,eAAiB,sBAAM,SAAS,MAC7C,CAAC,QAAS,YAAc,sBAAM,SAAS,OACvC,CAAC,UAAW,cAAgB,sBAAM,SAAS,IACjD,6BAAM,UAAU,IAAM,CACpB,cAAc,GAAI,YAAW,IAAI,YAAa,IAAI,UAAW,cAC5D,IAED,wEACE,oCAAC,MAAD,CAAK,GAAG,aACR,oCAAC,MAAD,CAAK,GAAG,SAAS,UAAU,SAAQ,sCACnC,oCAAC,MAAD,CAAK,GAAG,YAAY,UAAU,SAC3B,YAAc,oCAAC,UAAD,CAAW,KAAM,WAAW,KAAM,UAChD,YAAc,oCAAC,WAAD,CAAY,KAAM,WAAW,OAC5C,oCAAC,YAAD,OAEF,oCAAC,KAAD,CAAI,GAAG",
  "names": []
}
